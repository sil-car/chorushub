name: Build with PyInstaller & release

on:
  #schedule:
  #  - cron: '0 4,16 * * *'
  workflow_dispatch:
    inputs:
      tag:
        description: "The version string (e.g. 'v4.0.0-alpha.1'):"
        required: true
        type: string
      prerelease:
        description: "Check if pre-release"
        required: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-20.04
    outputs:
      bin_name: ${{ steps.pyinstaller.outputs.bin_name }}
      sha_short: ${{ steps.sha.outputs.sha_short }}
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main

    - name: Get 1st 7 chars of commit SHA
      id: sha
      run: |
        sha="$(git log -n 1 main | grep commit | awk '{print $2}')"
        echo $sha
        echo "sha_short=${sha:0:7}" >> $GITHUB_OUTPUT

    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: pip

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        ${GITHUB_WORKSPACE}/script/build--prepare-files.sh

    - name: Build with pyinstaller
      id: pyinstaller
      run: |
        ${GITHUB_WORKSPACE}/scripts/build-pyinstaller.sh
        echo "bin_name=chorushub" >> $GITHUB_OUTPUT

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: chorushub
        path: dist/chorushub
        compression-level: 0

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
    - name: download
      uses: actions/download-artifact@v4
      with:
        name: chorushub
    - name: release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ inputs.tag }}
        draft: true
        prerelease: ${{ inputs.prerelease }}
        files: ${{ needs.build.outputs.bin_name }}
