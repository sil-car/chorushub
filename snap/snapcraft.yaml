name: chorushub
summary: Send/Receive data with one another on the local network.
website: https://github.com/sil-car/chorushub
contact: https://github.com/sil-car/chorushub/issues
issues: https://github.com/sil-car/chorushub/issues
license: MIT
title: ChorusHub
icon: pkg-data/chorushub32x32.png
description: |
  You install ChorusHub on one machine in the network and then it can can be
  used with WeSay, FieldWorks Language Explorer (FLEx) (with FLExBridge), and
  OneStory Editor, or any other software using the Chorus technology.
  ChorusHub installs and runs as a Windows Service, and can be run as a
  background process on a Linux machine.

adopt-info: app # set version and grade from pyproject.toml
confinement: strict
base: core22
architectures:
  - build-on: [amd64]

layout:
  /usr/lib/mono:
    symlink: $SNAP/usr/lib/mono # or bind:
  /usr/share/.mono:
    symlink: $SNAP/etc/mono/certstore # or bind:

apps:
  chorushub:
    command: bin/chorushub
    # YAML aliases (e.g. "&allplugs"):
    # https://www.linode.com/docs/guides/yaml-anchors-aliases-overrides-extensions/
    plugs: &allplugs
      - home
      - network
      - removable-media
  start:
    command: bin/chorushub start
    plugs: *allplugs
  stop:
    command: bin/chorushub stop
    plugs: *allplugs
  restart:
    command: bin/chorushub restart
    plugs: *allplugs

package-repositories:
  - type: apt
    components: [main]
    suites: [stable-focal]
    key-id: 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
    url: https://download.mono-project.com/repo/ubuntu

parts:
  mono:
    plugin: nil
    stage-packages:
      - libmono-2.0-1
      - mono-devel

  sil-files:
    after:
      - mono
    plugin: nil
    source: .
    build-packages:
      - wget
    override-build: |
      # Grab fieldworks-applications focal package.
      # NOTE: flexbridge also has these packages, but they're older versions.
      debfile="fieldworks-applications_9.0.17.119+focal1_amd64.deb"
      wget "http://packages.sil.org/ubuntu/pool/main/f/fieldworks/${debfile}"
      dpkg-deb -x "$debfile" "${CRAFT_PART_SRC}"

      # Copy files to install dirs.
      libs=(
        ChorusHub.exe
        LibChorus.dll
        SIL.Core.dll
      )
      for l in "${libs[@]}"; do
        cp -av "${CRAFT_PART_SRC}/usr/lib/fieldworks/"$l "${CRAFT_PART_INSTALL}/usr/lib/mono/gac"
      done

  app:
    after:
      - mono
      - sil-files
    plugin: python
    source: https://github.com/sil-car/chorushub.git
    source-depth: 1
    override-pull: |
      craftctl default
      snap_ver=$(grep 'version =' ${CRAFT_PART_SRC}/pyproject.toml | grep -Eo '[0-9.]+')
      craftctl set version="${snap_ver}"
      craftctl set grade="stable"
    build-packages:
      - python3-pip
    # override-build: |
    #   # Install dephell to convert pyproject.toml to setup.py, which is req'd. by craftctl.

    #   # core20
    #   # https://forum.snapcraft.io/t/building-a-core20-python-snap-using-pyproject-toml/22028/2
    #   # pip3 install --user dephell[full]
    #   # $HOME/.local/bin/dephell deps convert --from-path=pyproject.toml --from-format=poetry --to-path=setup.py --to-format=setuppy

    #   craftctl default

  # cleanup:
  #   # https://forum.snapcraft.io/t/reduce-size-of-qt5-app-snap/31030/7
  #   after:
  #     - ffmpeg
  #     - libsvtav1
  #     - squeeze-vid
  #   plugin: nil
  #   build-snaps:
  #     - core22
  #   override-prime: |
  #     set -eux
  #     cd "/snap/core20/current" && find . -type f,l -exec rm -f "$SNAPCRAFT_PRIME/{}" \;
  #     for x in include lib64 usr/include usr/lib/pkgconfig usr/share/doc-base usr/share/ffmpeg/examples usr/share/man; do
  #       rm -rf "$SNAPCRAFT_PRIME/$x"
  #     done
  #     find $SNAPCRAFT_PRIME/usr/share/doc/ -type f -not -name 'copyright' -delete
  #     find $SNAPCRAFT_PRIME/usr/share -type d -empty -delete
